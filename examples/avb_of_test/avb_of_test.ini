[General]
network = sdn4core.examples.avb_of_test.avb_of_test

#sim-time-limit = 300s
#repeat = 4
#seed-set = ${repetition}

**.rtt.result-recording-modes = +vector,-stats
**.queueSize.result-recording-modes = +vector,+stats
**.bufferSize.result-recording-modes = +vector,+stats
**.waitingTime.result-recording-modes = +vector,+stats

**.packets.result-recording-modes = +count
**.packetBytes.result-recording-modes = +sum
**.packets*.scalar-recording = true
**.packetBytes*.scalar-recording = true

**.numPacketIn*.scalar-recording = true

**.bufferSize*.vector-recording = true
**.queueSize*.vector-recording = true
**.waitingTime*.vector-recording = true

**.nodeInNumPaths**.scalar-recording = true
**.avgPathLength.scalar-recording = true
**.minPathLength.scalar-recording = true
**.maxPathLength.scalar-recording = true
**.numClients.scalar-recording = true
**.numPaths.scalar-recording = true

**.flowTable**.scalar-recording = true

**.pingApp[*].rtt*.vector-recording = true

**.controllerApps[*].*.scalar-recording = true
**.pingApp[*].numLost*.scalar-recording = true
**.pingApp[*].numOutOfOrderArrivals*.scalar-recording = true

**.vector-recording = false
**.scalar-recording = false

# Global config
**.sync.typename = "NoSync"
**.ct_marker = 0x03040506
**.ct_mask = 0xffffffff

#RTConfig
**.domain[0].client[0].networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='client00']")
**.domain[0].client[1].networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='client01']")
**.domain[1].client[0].networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='client10']")
**.domain[1].client[1].networkLayer.ip.filters = xmldoc("rtIpConfig.xml", "/rtIpConfig/node[@id='client11']")

**.numClients = 2
**.numOFDomains = 2
**.domain[0].domainID = 1
**.domain[1].domainID = 2


# random ping application
#**.client[*].numPingApps = 1
#**.client[*].pingApp[*].typename = "PingAppRandom"
#**.client[*].pingApp[*].sendInterval = (${pingInterval= 0.25,0.5,1,1.5,2}s)
#**.client[*].pingApp[*].startTime = uniform(100s,120s)
**.domain[0].client[0].numPingApps = 1
**.domain[0].client[0].typename = "PingApp"
**.domain[0].client[0].pingApp[0].startTime = 0.5s
**.domain[0].client[0].pingApp[0].destAddr = "domain[1].client[0]"


#D0C1
**.domain[0].client[1].phy[*].mac.address = "0A-00-00-00-00-01"
**.domain[0].client[1].numApps = 1
**.domain[0].client[1].numUdpApps = 1
##AVB Talker
**.domain[0].client[1].app[0].typename = "AVBTrafficSourceApp"
**.domain[0].client[1].app[0].streamID = 1
**.domain[0].client[1].app[0].srClass = "A"
**.domain[0].client[1].app[0].intervalFrames = 1
**.domain[0].client[1].app[0].payload = 350Byte
**.domain[0].client[1].app[0].startTime = 0.1s
##Crosstraffic Source
**.domain[0].client[1].udpApp[0].typename = "UDPBasicApp"
**.domain[0].client[1].udpApp[0].destAddresses = "domain[1].client[0]"
**.domain[0].client[1].udpApp[0].startTime = 0.1s
**.domain[0].client[1].udpApp[0].messageLength = 1000Byte
**.domain[0].client[1].udpApp[0].sendInterval = uniform(0.5ms,1.0ms)
**.domain[0].client[1].udpApp[0].localPort = 6666
**.domain[0].client[1].udpApp[0].destPort = 6666


#D1C1
**.domain[1].client[1].phy[*].mac.address = "0A-00-00-00-01-01"
**.domain[1].client[1].numApps = 1
**.domain[1].client[1].numUdpApps = 1
##AVB Talker
**.domain[1].client[1].app[0].typename = "AVBTrafficSourceApp"
**.domain[1].client[1].app[0].streamID = 2
**.domain[1].client[1].app[0].srClass = "A"
**.domain[1].client[1].app[0].intervalFrames = 1
**.domain[1].client[1].app[0].payload = 350Byte
**.domain[1].client[1].app[0].startTime = 0.1s
##Crosstraffic Source
**.domain[1].client[1].udpApp[0].typename = "UDPBasicApp"
**.domain[1].client[1].udpApp[0].destAddresses = "domain[0].client[0]"
**.domain[1].client[1].udpApp[0].startTime = 0.1s
**.domain[1].client[1].udpApp[0].messageLength = 1000Byte
**.domain[1].client[1].udpApp[0].sendInterval = uniform(0.5ms,1.0ms)
**.domain[1].client[1].udpApp[0].localPort = 6666
**.domain[1].client[1].udpApp[0].destPort = 6666


#D0C0
**.domain[0].client[0].phy[*].mac.address = "0A-00-00-00-00-00"
**.domain[0].client[0].numApps = 1
**.domain[0].client[0].numUdpApps = 1
#AVB Listener
**.domain[0].client[0].app[0].typename = "AVBTrafficSinkApp"
**.domain[0].client[0].app[0].streamID = 2
**.domain[0].client[0].app[0].startTime = 0.5s
##Crosstraffic Sink
**.domain[0].client[0].udpApp[0].typename = "UDPSink"
**.domain[0].client[0].udpApp[0].localPort = 6666


#D1C0
**.domain[1].client[0].phy[*].mac.address = "0A-00-00-00-01-00"
**.domain[1].client[0].numApps = 1
**.domain[1].client[0].numUdpApps = 1
##AVB Listener
**.domain[1].client[0].app[0].typename = "AVBTrafficSinkApp"
**.domain[1].client[0].app[0].streamID = 1
**.domain[1].client[0].app[0].startTime = 0.5s
##Crosstraffic Sink
**.domain[1].client[0].udpApp[0].typename = "UDPSink"
**.domain[1].client[0].udpApp[0].localPort = 6666


# openflow parameters
**.switchAgent.connectAddress = "open_flow_controller1"
**.switchAgent.connectAt = 0#uniform(0s,1s)


# 404bytes see imix and buffer size of 1.5mb see hp switch 1500000/404
**.switchAgent.bufferCapacity = 3712


**.open_flow_switch.of_service_time = 35ns
**.open_flow_switch.hardware_delay = 35ns

#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.open_flow_controller*.serviceTime = 500ns


**.open_flow_controller*.numControllerApps = 1
**.open_flow_controller*.controllerApps[0].typename = "AVBLearningControllerApp"


# NIC configuration
**.ppp[*].queue.frameCapacity = 10  # in routers


#linux mint 15 std value
**.arp.cacheTimeout = 120s

# configure control and data plane interfaces separately
*.configurator.config = xmldoc("ipv4config.xml")
