[General]
record-eventlog = false
#sim-time-limit = 1200s

**.vector-recording = true
**.scalar-recording = true

# Global config:
**.ct_marker = 0x03040506
**.ct_mask = 0xffffffff

# Arp config
**.arpType = "GlobalARP"

**.hasQoSNP = false

**.sm.typename = "SomeIpManager"
**.sd.typename = "SomeIpSD"
**.middleware.**.multicastInterface = "phy0"

# Scheduling parameters for all modules:
# Tick length 8.0E-8s
**.scheduler.tick = 8.0E-8s

# Needs to be set true otherwise packets will be dropped
**.forceBroadcast = true

#**.sm.initialDelayMin = 10ms
#**.sm.initialDelayMax = 100ms
#**.sm.repetitionsMax = 3
#**.sm.repititionBaseDelay = 0.2s
#**.sm.cyclicOfferDelay = 2s
**.sm.initialDelayMin = 0ms
**.sm.initialDelayMax = 0ms
**.sm.repetitionsMax = 0
**.sm.repititionBaseDelay = 0s
**.sm.cyclicOfferDelay = 10s

**.switches*.hardware_delay = 8us
**.switches*.of_service_time = 100us#35us#15us#35us#0.000035s
**.switches*.switchAgent.parallelProcessing = true
#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.controller*.serviceTime = 100us#15us#10us#15us#0.000005556s
**.controller.OF_Controller.parallelProcessing = true

# visualization
#*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

**.numSwitches = 10
**.numPublishers=1
**.numSubscribers=1

# general pub sub config
**.publishers*.numServices = 1
**.publishers*.localAddress = "publishers[" + string(index) + "]"
**.publishers*.services[*].typename = "Publisher" 
**.publishers*.services[*].serviceName = "Publisher" + string(parentIndex())
**.publishers*.services[*].qosGroups = "SOMEIP_UDP SOMEIP_TCP SOMEIP_UDP_MCAST"
**.publishers*.services[*].interval = 100s
**.publishers*.services[*].payload = 46Byte
**.publishers*.services[*].startTime = 1ms
**.publishers*.services[*].applicationTCPPort = 1000+parentIndex()
**.publishers*.services[*].applicationUDPPort = 2000+parentIndex()
**.publishers*.services[*].mcastDestPort = 3000+parentIndex()
**.publishers*.services[*].mcastDestAddress = "225.0.1." + string(parentIndex()+1)
**.publishers*.services[*].serviceId = parentIndex()+1
**.publishers*.services[*].instanceID = 0x0001

**.subscribers*.localAddress = "subscribers[" + string(index) + "]"
**.subscribers*.numServices = 1
**.subscribers*.services[*].typename = "Subscriber"
**.subscribers*.services[*].applicationTCPPort = 1000+index
**.subscribers*.services[*].applicationUDPPort = 2000+index
**.subscribers*.services[*].serviceId = parentIndex()+1
**.subscribers*.services[*].instanceID = 0x0001
**.subscribers*.services[*].startTime = 1ms
**.subscribers*.services[*].qosGroup = "SOMEIP_UDP"

[Config UDP_Mcast]
**.subscribers*.services[*].qosGroup = "SOMEIP_UDP_MCAST"

[Config SubPerPub_Study]
**.numPublishers=${N=1, 2, 5, 10..50 step 10}
**.numSubscribers=${N}

[Config MultSubPerPub_Study]
**.numPublishers=${P=1, 2, 5, 10..50 step 10}
**.numSubscribers=${C=1, 2, 5, 10..50 step 10}
**.subscribers*.numServices = ${P}
**.subscribers*.services[*].serviceId = index+1

[Config SecVI]
**.numPublishers=250
**.numSubscribers=5
**.subscribers*.numServices = 250
**.numSwitches = 2

[Config Switches_Study]
extends = SubPerPub_Study
**.numSwitches = ${S=1, 2, 5, 10}

[Config SwitchesMultSub_Study]
extends = MultSubPerPub_Study
**.numSwitches = ${S=1, 2, 5}

[Config Switch]
network = vtc23_scaling_switch

[Config Switch_UDP_Mcast]
extends = UDP_Mcast, Switch

[Config SDNVanilla]
network = vtc23_scaling_sdn
**.configurator.config = xmldoc("ipv4config.xml")
**.switches*.switchAgent.connectAddress = "controller"
**.switches*.switchAgent.connectAt = 0s
**.switches*.eth[*].mac.address = "0A-00-00-00-0C-" + string(ancestorIndex(2)+10)
**.controller.numControllerApps = 2
**.controller.controllerApps[0].typename = "LearningControllerApp"
**.controller.controllerApps[0].packetFilterBlacklist = "etherType=0x88CC"
**.controller.controllerApps[0].matchAll = true
**.controller.controllerApps[1].typename = "LLDPControllerApp"

[Config SDNVanilla_UDP_Mcast]
extends = UDP_Mcast, SDNVanilla

[Config SDN]
extends = SDNVanilla
**.controller.numControllerApps = 3 
**.controller.controllerApps[0].packetFilterBlacklist = "etherType=0x88CC;udpSrc=30490"
**.controller.controllerApps[2].typename = "SomeipSDControllerApp"

[Config SDN_UDP_Mcast]
extends = UDP_Mcast, SDN

[Config Switch_SubPerPub_Study]
extends = SubPerPub_Study, Switch
[Config Switch_Mcast_SubPerPub_Study]
extends = SubPerPub_Study, Switch_UDP_Mcast
[Config SDNVanilla_SubPerPub_Study]
extends = SubPerPub_Study, SDNVanilla
[Config SDNVanilla_Mcast_SubPerPub_Study]
extends = SubPerPub_Study, SDNVanilla_UDP_Mcast
[Config SDN_SubPerPub_Study]
extends = SubPerPub_Study, SDN
[Config SDN_Mcast_SubPerPub_Study]
extends = SubPerPub_Study, SDN_UDP_Mcast

[Config Switch_MultSubPerPub_Study]
extends = MultSubPerPub_Study, Switch
[Config Switch_Mcast_MultSubPerPub_Study]
extends = MultSubPerPub_Study, Switch_UDP_Mcast
[Config SDNVanilla_MultSubPerPub_Study]
extends = MultSubPerPub_Study, SDNVanilla
[Config SDNVanilla_Mcast_MultSubPerPub_Study]
extends = MultSubPerPub_Study, SDNVanilla_UDP_Mcast
[Config SDN_MultSubPerPub_Study]
extends = MultSubPerPub_Study, SDN
[Config SDN_Mcast_MultSubPerPub_Study]
extends = MultSubPerPub_Study, SDN_UDP_Mcast

[Config Switch_SwitchesMultSub_Study]
extends = SwitchesMultSub_Study, Switch
[Config SDN_SwitchesMultSub_Study]
extends = SwitchesMultSub_Study, SDN
[Config SDNVanilla_SwitchesMultSub_Study]
extends = SwitchesMultSub_Study, SDNVanilla

[Config Switch_Switches_Study]
extends = Switches_Study, Switch
[Config Switch_Mcast_Switches_Study]
extends = Switches_Study, Switch_UDP_Mcast
[Config SDNVanilla_Switches_Study]
extends = Switches_Study, SDNVanilla
[Config SDNVanilla_Mcast_Switches_Study]
extends = Switches_Study, SDNVanilla_UDP_Mcast
[Config SDN_Switches_Study]
extends = Switches_Study, SDN
[Config SDN_Mcast_Switches_Study]
extends = Switches_Study, SDN_UDP_Mcast

[Config SecVI_SDNVanilla]
extends = SecVI, SDNVanilla

[Config SecVI_SDN]
extends = SecVI, SDN

[Config SecVI_Ethernet]
extends = SecVI, Switch
